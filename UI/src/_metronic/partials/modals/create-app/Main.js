"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Main = void 0;
/* eslint-disable jsx-a11y/anchor-is-valid */
var react_1 = require("react");
var helpers_1 = require("../../../helpers");
var formik_1 = require("formik");
var Yup = require("yup");
var components_1 = require("../../../assets/ts/components");
var inits = {
    appName: '',
    category: '1',
    framework: '1',
    dbName: '',
    dbType: '1',
    nameOnCard: 'Max Doe',
    cardNumber: '4111 1111 1111 1111',
    cardExpiryMonth: '1',
    cardExpiryYear: '2025',
    cardCvv: '123',
    saveCard: '1',
};
var createAppSchema = [
    Yup.object({
        appName: Yup.string().required().label('App name'),
        category: Yup.string().required().label('Category'),
    }),
    Yup.object({
        framework: Yup.string().required().label('Framework'),
    }),
    Yup.object({
        dbName: Yup.string().required().label('Database name'),
        dbType: Yup.string().required().label('Database engine'),
    }),
    Yup.object({
        nameOnCard: Yup.string().required().label('Name'),
        cardNumber: Yup.string().required().label('Card Number'),
        cardExpiryMonth: Yup.string().required().label('Expiration Month'),
        cardExpiryYear: Yup.string().required().label('Expiration Year'),
        cardCvv: Yup.string().required().label('CVV'),
    }),
];
var Main = function () {
    var stepperRef = (0, react_1.useRef)(null);
    var stepper = (0, react_1.useRef)(null);
    var _a = (0, react_1.useState)(createAppSchema[0]), currentSchema = _a[0], setCurrentSchema = _a[1];
    var initValues = (0, react_1.useState)(inits)[0];
    var loadStepper = function () {
        stepper.current = components_1.StepperComponent.createInsance(stepperRef.current);
    };
    var prevStep = function () {
        if (!stepper.current) {
            return;
        }
        stepper.current.goPrev();
        setCurrentSchema(createAppSchema[stepper.current.currentStepIndex - 1]);
    };
    var submitStep = function (values, actions) {
        if (!stepper.current) {
            return;
        }
        setCurrentSchema(createAppSchema[stepper.current.currentStepIndex]);
        if (stepper.current.currentStepIndex !== stepper.current.totatStepsNumber) {
            stepper.current.goNext();
        }
        else {
            stepper.current.goto(1);
            actions.resetForm();
        }
    };
    (0, react_1.useEffect)(function () {
        if (!stepperRef.current) {
            return;
        }
        loadStepper();
    }, [stepperRef]);
    return (react_1.default.createElement("div", { className: 'modal fade', id: 'kt_modal_create_app', "aria-hidden": 'true' },
        react_1.default.createElement("div", { className: 'modal-dialog modal-dialog-centered mw-900px' },
            react_1.default.createElement("div", { className: 'modal-content' },
                react_1.default.createElement("div", { className: 'modal-header' },
                    react_1.default.createElement("h2", null, "Create App"),
                    react_1.default.createElement("div", { className: 'btn btn-sm btn-icon btn-active-color-primary', "data-bs-dismiss": 'modal' },
                        react_1.default.createElement(helpers_1.KTSVG, { path: '/media/icons/duotune/arrows/arr061.svg', className: 'svg-icon-1' }))),
                react_1.default.createElement("div", { className: 'modal-body py-lg-10 px-lg-10' },
                    react_1.default.createElement("div", { ref: stepperRef, className: 'stepper stepper-pills stepper-column d-flex flex-column flex-xl-row flex-row-fluid', id: 'kt_modal_create_app_stepper' },
                        react_1.default.createElement("div", { className: 'd-flex justify-content-center justify-content-xl-start flex-row-auto w-100 w-xl-300px' },
                            react_1.default.createElement("div", { className: 'stepper-nav ps-lg-10' },
                                react_1.default.createElement("div", { className: 'stepper-item current', "data-kt-stepper-element": 'nav' },
                                    react_1.default.createElement("div", { className: 'stepper-line w-40px' }),
                                    react_1.default.createElement("div", { className: 'stepper-icon w-40px h-40px' },
                                        react_1.default.createElement("i", { className: 'stepper-check fas fa-check' }),
                                        react_1.default.createElement("span", { className: 'stepper-number' }, "1")),
                                    react_1.default.createElement("div", { className: 'stepper-label' },
                                        react_1.default.createElement("h3", { className: 'stepper-title' }, "Details"),
                                        react_1.default.createElement("div", { className: 'stepper-desc' }, "Name your App"))),
                                react_1.default.createElement("div", { className: 'stepper-item', "data-kt-stepper-element": 'nav' },
                                    react_1.default.createElement("div", { className: 'stepper-line w-40px' }),
                                    react_1.default.createElement("div", { className: 'stepper-icon w-40px h-40px' },
                                        react_1.default.createElement("i", { className: 'stepper-check fas fa-check' }),
                                        react_1.default.createElement("span", { className: 'stepper-number' }, "2")),
                                    react_1.default.createElement("div", { className: 'stepper-label' },
                                        react_1.default.createElement("h3", { className: 'stepper-title' }, "Frameworks"),
                                        react_1.default.createElement("div", { className: 'stepper-desc' }, "Define your app framework"))),
                                react_1.default.createElement("div", { className: 'stepper-item', "data-kt-stepper-element": 'nav' },
                                    react_1.default.createElement("div", { className: 'stepper-line w-40px' }),
                                    react_1.default.createElement("div", { className: 'stepper-icon w-40px h-40px' },
                                        react_1.default.createElement("i", { className: 'stepper-check fas fa-check' }),
                                        react_1.default.createElement("span", { className: 'stepper-number' }, "3")),
                                    react_1.default.createElement("div", { className: 'stepper-label' },
                                        react_1.default.createElement("h3", { className: 'stepper-title' }, "Database"),
                                        react_1.default.createElement("div", { className: 'stepper-desc' }, "Select the app database type"))),
                                react_1.default.createElement("div", { className: 'stepper-item', "data-kt-stepper-element": 'nav' },
                                    react_1.default.createElement("div", { className: 'stepper-line w-40px' }),
                                    react_1.default.createElement("div", { className: 'stepper-icon w-40px h-40px' },
                                        react_1.default.createElement("i", { className: 'stepper-check fas fa-check' }),
                                        react_1.default.createElement("span", { className: 'stepper-number' }, "4")),
                                    react_1.default.createElement("div", { className: 'stepper-label' },
                                        react_1.default.createElement("h3", { className: 'stepper-title' }, "Billing"),
                                        react_1.default.createElement("div", { className: 'stepper-desc' }, "Provide payment details"))),
                                react_1.default.createElement("div", { className: 'stepper-item', "data-kt-stepper-element": 'nav' },
                                    react_1.default.createElement("div", { className: 'stepper-line w-40px' }),
                                    react_1.default.createElement("div", { className: 'stepper-icon w-40px h-40px' },
                                        react_1.default.createElement("i", { className: 'stepper-check fas fa-check' }),
                                        react_1.default.createElement("span", { className: 'stepper-number' }, "5")),
                                    react_1.default.createElement("div", { className: 'stepper-label' },
                                        react_1.default.createElement("h3", { className: 'stepper-title' }, "Release"),
                                        react_1.default.createElement("div", { className: 'stepper-desc' }, "Review and Submit"))))),
                        react_1.default.createElement("div", { className: 'flex-row-fluid py-lg-5 px-lg-15' },
                            react_1.default.createElement(formik_1.Formik, { validationSchema: currentSchema, initialValues: initValues, onSubmit: submitStep }, function () {
                                var _a, _b, _c, _d;
                                return (react_1.default.createElement(formik_1.Form, { className: 'form', noValidate: true, id: 'kt_modal_create_app_form' },
                                    react_1.default.createElement("div", { className: 'current', "data-kt-stepper-element": 'content' },
                                        react_1.default.createElement("div", { className: 'w-100' },
                                            react_1.default.createElement("div", { className: 'fv-row mb-10' },
                                                react_1.default.createElement("label", { className: 'd-flex align-items-center fs-5 fw-bold mb-2' },
                                                    react_1.default.createElement("span", { className: 'required' }, "App Name"),
                                                    react_1.default.createElement("i", { className: 'fas fa-exclamation-circle ms-2 fs-7', "data-bs-toggle": 'tooltip', title: 'Specify your unique app name' })),
                                                react_1.default.createElement(formik_1.Field, { type: 'text', className: 'form-control form-control-lg form-control-solid', name: 'appName', placeholder: '' }),
                                                react_1.default.createElement("div", { className: 'text-danger' },
                                                    react_1.default.createElement(formik_1.ErrorMessage, { name: 'appName' }))),
                                            react_1.default.createElement("div", { className: 'fv-row' },
                                                react_1.default.createElement("label", { className: 'd-flex align-items-center fs-5 fw-bold mb-4' },
                                                    react_1.default.createElement("span", { className: 'required' }, "Category"),
                                                    react_1.default.createElement("i", { className: 'fas fa-exclamation-circle ms-2 fs-7', "data-bs-toggle": 'tooltip', title: 'Select your app category' })),
                                                react_1.default.createElement("div", { className: 'fv-row' },
                                                    react_1.default.createElement("label", { className: 'd-flex flex-stack mb-5 cursor-pointer' },
                                                        react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                            react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                                react_1.default.createElement("span", { className: 'symbol-label bg-light-primary' },
                                                                    react_1.default.createElement(helpers_1.KTSVG, { path: '/media/icons/duotune/maps/map004.svg', className: 'svg-icon-1 svg-icon-primary' }))),
                                                            react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                                react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "Quick Online Courses"),
                                                                react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Creating a clear text structure is just one SEO"))),
                                                        react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                            react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'category', value: '1' }))),
                                                    react_1.default.createElement("label", { className: 'd-flex flex-stack mb-5 cursor-pointer' },
                                                        react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                            react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                                react_1.default.createElement("span", { className: 'symbol-label bg-light-danger  ' },
                                                                    react_1.default.createElement(helpers_1.KTSVG, { path: '/media/icons/duotune/general/gen024.svg', className: 'svg-icon-1 svg-icon-danger' }))),
                                                            react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                                react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "Face to Face Discussions"),
                                                                react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Creating a clear text structure is just one aspect"))),
                                                        react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                            react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'category', value: '2' }))),
                                                    react_1.default.createElement("label", { className: 'd-flex flex-stack cursor-pointer' },
                                                        react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                            react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                                react_1.default.createElement("span", { className: 'symbol-label bg-light-success' },
                                                                    react_1.default.createElement(helpers_1.KTSVG, { path: '/media/icons/duotune/general/gen013.svg', className: 'svg-icon-1 svg-icon-success' }))),
                                                            react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                                react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "Full Intro Training"),
                                                                react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Creating a clear text structure copywriting"))),
                                                        react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                            react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'category', value: '3' })))),
                                                react_1.default.createElement("div", { className: 'text-danger' },
                                                    react_1.default.createElement(formik_1.ErrorMessage, { name: 'category' }))))),
                                    react_1.default.createElement("div", { "data-kt-stepper-element": 'content' },
                                        react_1.default.createElement("div", { className: 'w-100' },
                                            react_1.default.createElement("div", { className: 'fv-row' },
                                                react_1.default.createElement("label", { className: 'd-flex align-items-center fs-5 fw-bold mb-4' },
                                                    react_1.default.createElement("span", { className: 'required' }, "Select Framework"),
                                                    react_1.default.createElement("i", { className: 'fas fa-exclamation-circle ms-2 fs-7', "data-bs-toggle": 'tooltip', title: 'Specify your apps framework' })),
                                                react_1.default.createElement("label", { className: 'd-flex flex-stack cursor-pointer mb-5' },
                                                    react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                        react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                            react_1.default.createElement("span", { className: 'symbol-label bg-light-warning' },
                                                                react_1.default.createElement("i", { className: 'fab fa-html5 text-warning fs-2x' }))),
                                                        react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                            react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "HTML5"),
                                                            react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Base Web Projec"))),
                                                    react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                        react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'framework', value: '1' }))),
                                                react_1.default.createElement("label", { className: 'd-flex flex-stack cursor-pointer mb-5' },
                                                    react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                        react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                            react_1.default.createElement("span", { className: 'symbol-label bg-light-success' },
                                                                react_1.default.createElement("i", { className: 'fab fa-react text-success fs-2x' }))),
                                                        react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                            react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "ReactJS"),
                                                            react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Robust and flexible app framework"))),
                                                    react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                        react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'framework', value: '2' }))),
                                                react_1.default.createElement("label", { className: 'd-flex flex-stack cursor-pointer mb-5' },
                                                    react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                        react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                            react_1.default.createElement("span", { className: 'symbol-label bg-light-danger' },
                                                                react_1.default.createElement("i", { className: 'fab fa-angular text-danger fs-2x' }))),
                                                        react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                            react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "Angular"),
                                                            react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Powerful data mangement"))),
                                                    react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                        react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'framework', value: '3' }))),
                                                react_1.default.createElement("label", { className: 'd-flex flex-stack cursor-pointer' },
                                                    react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                        react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                            react_1.default.createElement("span", { className: 'symbol-label bg-light-primary' },
                                                                react_1.default.createElement("i", { className: 'fab fa-vuejs text-primary fs-2x' }))),
                                                        react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                            react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "Vue"),
                                                            react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Lightweight and responsive framework"))),
                                                    react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                        react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'framework', value: '4' })))),
                                            react_1.default.createElement("div", { className: 'text-danger' },
                                                react_1.default.createElement(formik_1.ErrorMessage, { name: 'framework' })))),
                                    react_1.default.createElement("div", { "data-kt-stepper-element": 'content' },
                                        react_1.default.createElement("div", { className: 'w-100' },
                                            react_1.default.createElement("div", { className: 'fv-row mb-10' },
                                                react_1.default.createElement("label", { className: 'required fs-5 fw-bold mb-2' }, "Database Name"),
                                                react_1.default.createElement(formik_1.Field, { type: 'text', className: 'form-control form-control-lg form-control-solid', name: 'dbName', placeholder: '' }),
                                                react_1.default.createElement("div", { className: 'text-danger' },
                                                    react_1.default.createElement(formik_1.ErrorMessage, { name: 'dbName' }))),
                                            react_1.default.createElement("div", { className: 'fv-row' },
                                                react_1.default.createElement("label", { className: 'd-flex align-items-center fs-5 fw-bold mb-4' },
                                                    react_1.default.createElement("span", { className: 'required' }, "Select Database Engine"),
                                                    react_1.default.createElement("i", { className: 'fas fa-exclamation-circle ms-2 fs-7', "data-bs-toggle": 'tooltip', title: 'Select your app database engine' })),
                                                react_1.default.createElement("label", { className: 'd-flex flex-stack cursor-pointer mb-5' },
                                                    react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                        react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                            react_1.default.createElement("span", { className: 'symbol-label bg-light-success' },
                                                                react_1.default.createElement("i", { className: 'fas fa-database text-success fs-2x' }))),
                                                        react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                            react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "MySQL"),
                                                            react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Basic MySQL database"))),
                                                    react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                        react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'dbType', value: '1' }))),
                                                react_1.default.createElement("label", { className: 'd-flex flex-stack cursor-pointer mb-5' },
                                                    react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                        react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                            react_1.default.createElement("span", { className: 'symbol-label bg-light-danger' },
                                                                react_1.default.createElement("i", { className: 'fab fa-google text-danger fs-2x' }))),
                                                        react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                            react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "Firebase"),
                                                            react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Google based app data management"))),
                                                    react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                        react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'dbType', value: '2' }))),
                                                react_1.default.createElement("label", { className: 'd-flex flex-stack cursor-pointer' },
                                                    react_1.default.createElement("span", { className: 'd-flex align-items-center me-2' },
                                                        react_1.default.createElement("span", { className: 'symbol symbol-50px me-6' },
                                                            react_1.default.createElement("span", { className: 'symbol-label bg-light-warning' },
                                                                react_1.default.createElement("i", { className: 'fab fa-amazon text-warning fs-2x' }))),
                                                        react_1.default.createElement("span", { className: 'd-flex flex-column' },
                                                            react_1.default.createElement("span", { className: 'fw-bolder fs-6' }, "DynamoDB"),
                                                            react_1.default.createElement("span", { className: 'fs-7 text-muted' }, "Amazon Fast NoSQL Database"))),
                                                    react_1.default.createElement("span", { className: 'form-check form-check-custom form-check-solid' },
                                                        react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'radio', name: 'dbType', value: '3' })))),
                                            react_1.default.createElement("div", { className: 'text-danger' },
                                                react_1.default.createElement(formik_1.ErrorMessage, { name: 'dbType' })))),
                                    react_1.default.createElement("div", { "data-kt-stepper-element": 'content' },
                                        react_1.default.createElement("div", { className: 'w-100' },
                                            react_1.default.createElement("div", { className: 'pb-10 pb-lg-15' },
                                                react_1.default.createElement("h2", { className: 'fw-bolder text-dark' }, "Billing Details"),
                                                react_1.default.createElement("div", { className: 'text-gray-400 fw-bold fs-6' },
                                                    "If you need more info, please check out",
                                                    react_1.default.createElement("a", { href: '#', className: 'text-primary fw-bolder' }, "Help Page"),
                                                    ".")),
                                            react_1.default.createElement("div", { className: 'd-flex flex-column mb-7 fv-row' },
                                                react_1.default.createElement("label", { className: 'd-flex align-items-center fs-6 fw-bold form-label mb-2' },
                                                    react_1.default.createElement("span", { className: 'required' }, "Name On Card"),
                                                    react_1.default.createElement("i", { className: 'fas fa-exclamation-circle ms-2 fs-7', "data-bs-toggle": 'tooltip', title: "Specify a card holder's name" })),
                                                react_1.default.createElement(formik_1.Field, { type: 'text', className: 'form-control form-control-solid', placeholder: '', name: 'nameOnCard' }),
                                                react_1.default.createElement("div", { className: 'text-danger' },
                                                    react_1.default.createElement(formik_1.ErrorMessage, { name: 'nameOnCard' }))),
                                            react_1.default.createElement("div", { className: 'd-flex flex-column mb-7 fv-row' },
                                                react_1.default.createElement("label", { className: 'required fs-6 fw-bold form-label mb-2' }, "Card Number"),
                                                react_1.default.createElement("div", { className: 'position-relative' },
                                                    react_1.default.createElement(formik_1.Field, { type: 'text', className: 'form-control form-control-solid', placeholder: 'Enter card number', name: 'cardNumber' }),
                                                    react_1.default.createElement("div", { className: 'text-danger' },
                                                        react_1.default.createElement(formik_1.ErrorMessage, { name: 'cardNumber' })),
                                                    react_1.default.createElement("div", { className: 'position-absolute translate-middle-y top-50 end-0 me-5' },
                                                        react_1.default.createElement("img", { src: (0, helpers_1.toAbsoluteUrl)('/media/svg/card-logos/visa.svg'), alt: '', className: 'h-25px' }),
                                                        react_1.default.createElement("img", { src: (0, helpers_1.toAbsoluteUrl)('/media/svg/card-logos/mastercard.svg'), alt: '', className: 'h-25px' }),
                                                        react_1.default.createElement("img", { src: (0, helpers_1.toAbsoluteUrl)('/media/svg/card-logos/american-express.svg'), alt: '', className: 'h-25px' })))),
                                            react_1.default.createElement("div", { className: 'row mb-10' },
                                                react_1.default.createElement("div", { className: 'col-md-8 fv-row' },
                                                    react_1.default.createElement("label", { className: 'required fs-6 fw-bold form-label mb-2' }, "Expiration Date"),
                                                    react_1.default.createElement("div", { className: 'row fv-row' },
                                                        react_1.default.createElement("div", { className: 'col-6' },
                                                            react_1.default.createElement(formik_1.Field, { as: 'select', name: 'cardExpiryMonth', className: 'form-select form-select-solid' },
                                                                react_1.default.createElement("option", null),
                                                                react_1.default.createElement("option", { value: '1' }, "1"),
                                                                react_1.default.createElement("option", { value: '2' }, "2"),
                                                                react_1.default.createElement("option", { value: '3' }, "3"),
                                                                react_1.default.createElement("option", { value: '4' }, "4"),
                                                                react_1.default.createElement("option", { value: '5' }, "5"),
                                                                react_1.default.createElement("option", { value: '6' }, "6"),
                                                                react_1.default.createElement("option", { value: '7' }, "7"),
                                                                react_1.default.createElement("option", { value: '8' }, "8"),
                                                                react_1.default.createElement("option", { value: '9' }, "9"),
                                                                react_1.default.createElement("option", { value: '10' }, "10"),
                                                                react_1.default.createElement("option", { value: '11' }, "11"),
                                                                react_1.default.createElement("option", { value: '12' }, "12")),
                                                            react_1.default.createElement("div", { className: 'text-danger' },
                                                                react_1.default.createElement(formik_1.ErrorMessage, { name: 'cardExpiryMonth' }))),
                                                        react_1.default.createElement("div", { className: 'col-6' },
                                                            react_1.default.createElement(formik_1.Field, { as: 'select', name: 'cardExpiryYear', className: 'form-select form-select-solid' },
                                                                react_1.default.createElement("option", null),
                                                                react_1.default.createElement("option", { value: '2021' }, "2021"),
                                                                react_1.default.createElement("option", { value: '2022' }, "2022"),
                                                                react_1.default.createElement("option", { value: '2023' }, "2023"),
                                                                react_1.default.createElement("option", { value: '2024' }, "2024"),
                                                                react_1.default.createElement("option", { value: '2025' }, "2025"),
                                                                react_1.default.createElement("option", { value: '2026' }, "2026"),
                                                                react_1.default.createElement("option", { value: '2027' }, "2027"),
                                                                react_1.default.createElement("option", { value: '2028' }, "2028"),
                                                                react_1.default.createElement("option", { value: '2029' }, "2029"),
                                                                react_1.default.createElement("option", { value: '2030' }, "2030"),
                                                                react_1.default.createElement("option", { value: '2031' }, "2031")),
                                                            react_1.default.createElement("div", { className: 'text-danger' },
                                                                react_1.default.createElement(formik_1.ErrorMessage, { name: 'cardExpiryYear' }))))),
                                                react_1.default.createElement("div", { className: 'col-md-4 fv-row' },
                                                    react_1.default.createElement("label", { className: 'd-flex align-items-center fs-6 fw-bold form-label mb-2' },
                                                        react_1.default.createElement("span", { className: 'required' }, "CVV"),
                                                        react_1.default.createElement("i", { className: 'fas fa-exclamation-circle ms-2 fs-7', "data-bs-toggle": 'tooltip', title: 'Enter a card CVV code' })),
                                                    react_1.default.createElement("div", { className: 'position-relative' },
                                                        react_1.default.createElement(formik_1.Field, { type: 'text', className: 'form-control form-control-solid', placeholder: 'CVV', name: 'cardCvv' }),
                                                        react_1.default.createElement("div", { className: 'text-danger' },
                                                            react_1.default.createElement(formik_1.ErrorMessage, { name: 'cardCvv' })),
                                                        react_1.default.createElement("div", { className: 'position-absolute translate-middle-y top-50 end-0 me-3' },
                                                            react_1.default.createElement(helpers_1.KTSVG, { path: '/media/icons/duotune/finance/fin002.svg', className: 'svg-icon-2hx' }))))),
                                            react_1.default.createElement("div", { className: 'd-flex flex-stack' },
                                                react_1.default.createElement("div", { className: 'me-5' },
                                                    react_1.default.createElement("label", { className: 'fs-6 fw-bold form-label' }, "Save Card for further billing?"),
                                                    react_1.default.createElement("div", { className: 'fs-7 fw-bold text-gray-400' }, "If you need more info, please check budget planning")),
                                                react_1.default.createElement("label", { className: 'form-check form-switch form-check-custom form-check-solid' },
                                                    react_1.default.createElement(formik_1.Field, { className: 'form-check-input', type: 'checkbox' }),
                                                    react_1.default.createElement("span", { className: 'form-check-label fw-bold text-gray-400' }, "Save Card"))))),
                                    react_1.default.createElement("div", { "data-kt-stepper-element": 'content' },
                                        react_1.default.createElement("div", { className: 'w-100 text-center' },
                                            react_1.default.createElement("h1", { className: 'fw-bolder text-dark mb-3' }, "Release!"),
                                            react_1.default.createElement("div", { className: 'text-muted fw-bold fs-3' }, "Submit your app to kickstart your project."),
                                            react_1.default.createElement("div", { className: 'text-center px-4 py-15' },
                                                react_1.default.createElement("img", { src: (0, helpers_1.toAbsoluteUrl)('/media/illustrations/sketchy-1/9.png'), alt: '', className: 'w-100 mh-300px' })))),
                                    react_1.default.createElement("div", { className: 'd-flex flex-stack pt-10' },
                                        react_1.default.createElement("div", { className: 'me-2' },
                                            react_1.default.createElement("button", { onClick: prevStep, type: 'button', className: 'btn btn-lg btn-light-primary me-3', "data-kt-stepper-action": 'previous' },
                                                react_1.default.createElement(helpers_1.KTSVG, { path: '/media/icons/duotune/arrows/arr063.svg', className: 'svg-icon-4 me-1' }),
                                                "Back")),
                                        react_1.default.createElement("div", null,
                                            react_1.default.createElement("button", { type: 'submit', className: 'btn btn-lg btn-primary me-3' },
                                                react_1.default.createElement("span", { className: 'indicator-label' },
                                                    ((_a = stepper.current) === null || _a === void 0 ? void 0 : _a.currentStepIndex) !==
                                                        ((_b = stepper.current) === null || _b === void 0 ? void 0 : _b.totatStepsNumber) - 1 && 'Continue',
                                                    ((_c = stepper.current) === null || _c === void 0 ? void 0 : _c.currentStepIndex) ===
                                                        ((_d = stepper.current) === null || _d === void 0 ? void 0 : _d.totatStepsNumber) - 1 && 'Submit',
                                                    react_1.default.createElement(helpers_1.KTSVG, { path: '/media/icons/duotune/arrows/arr064.svg', className: 'svg-icon-3 ms-2 me-0' })))))));
                            }))))))));
};
exports.Main = Main;
